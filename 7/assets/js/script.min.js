let data={background:"#223344",common_spacing:60,a_spacing:60,b_spacing:60,orbit_color:"#000000",orbit_stroke_weight:1,points:{color:"#05615C",stroke:"#000000",radius:18,stroke_weight:1},speed:7e-3};var controlKit,createControlKit=()=>{controlKit=new ControlKit,controlKit.addPanel({fixed:!1,label:"Controls"}).addColor(data,"background",{label:"Background"}).addSubGroup({label:"Orbit Controls"}).addNumberInput(data,"orbit_stroke_weight",{label:"Orbit Thickness"}).addNumberInput(data,"common_spacing",{label:"Orbital Spacing"}).addNumberInput(data,"a_spacing",{label:"Orbital Horizontal Spacing"}).addNumberInput(data,"b_spacing",{label:"Orbital Vertical Spacing"}).addColor(data,"orbit_color",{label:"Color"}).addSubGroup({label:"Point Controls"}).addNumberInput(data,"speed",{label:"Speed",step:1e-3,dp:3}).addNumberInput(data.points,"radius",{label:"Radius"}).addNumberInput(data.points,"stroke_weight",{label:"Border Thickness"}).addColor(data.points,"stroke",{label:"Stroke Color"}).addColor(data.points,"color",{label:"Fill Color"})};class CircularBody{constructor(a,b,c,d,e,f=color(255),g=color(0)){this.cx=a,this.cy=b,this.ia=c/2,this.ib=d/2,this.ra=this.ia*data.a_spacing,this.rb=this.ib*data.b_spacing,this.r=this.ia*data.common_spacing,this.fill=f,this.stroke=g,this.theta=0,this.p_speed_factor=e,this.px=this.ra*Math.cos(this.theta),this.py=this.rb*Math.sin(this.theta)}show(){push(),stroke(data.orbit_color),strokeWeight(data.orbit_stroke_weight),noFill(),data.a_spacing==data.b_spacing?(this.r=this.ia*data.common_spacing,ellipse(this.cx,this.cy,2*this.r,2*this.r)):(this.ra=this.ia*data.a_spacing,this.rb=this.ib*data.b_spacing,ellipse(this.cx,this.cy,2*this.ra,2*this.rb)),pop()}pShow(){push(),translate(this.cx,this.cy),stroke(data.points.stroke),strokeWeight(data.points.stroke_weight),data.a_spacing===data.b_spacing?(this.r=this.ia*data.common_spacing,this.px=this.r*Math.cos(this.theta),this.py=this.r*Math.sin(this.theta)):(this.ra=this.ia*data.a_spacing,this.rb=this.ib*data.b_spacing,this.px=this.ra*Math.cos(this.theta),this.py=this.rb*Math.sin(this.theta)),ellipseMode(CENTER),fill(data.points.color),ellipse(this.px,this.py,data.points.radius,data.points.radius),pop()}pUpdate(){this.theta=lerp(this.theta,this.theta+1,this.p_speed_factor*data.speed)}}let bodies=[];function setup(){createCanvas(windowWidth,windowHeight);for(var a=0,b=10;a<b;a+=1)bodies.push(new CircularBody(width/2,height/2,a+1,a+1,b-a))}function draw(){background(data.background);for(var a=0,b=bodies.length;a<b;a+=1)bodies[a].show(),bodies[a].pShow(),bodies[a].pUpdate()}createControlKit();