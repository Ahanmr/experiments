var data={mf:0.597,background:"#a52a2a",mouse_controlled:!1,left:{angle:45,mf:1},right:{angle:45,mf:1}},controlkit,createControlKit=()=>{controlkit=new ControlKit,controlkit.addPanel({fixed:!1,label:"Fractal Controls"}).addColor(data,"background",{colorMode:"hex",label:"Background Color"}).addNumberInput(data,"mf",{label:"Common Length Multiplier",step:1e-3,dp:3}).addCheckbox(data,"mouse_controlled",{label:"Mouse Position Controlled?"}).addSubGroup({label:"Left Branch"}).addNumberInput(data.left,"mf",{label:"Length multiplier",step:0.01}).addNumberInput(data.left,"angle",{label:"Root to left branch Angle",step:1}).addSubGroup({label:"Right Branch"}).addNumberInput(data.right,"angle",{label:"Root to right branch Angle",step:1}).addNumberInput(data.right,"mf",{label:"Length multiplier",step:0.01})};function setup(){createCanvas(windowWidth,windowHeight)}function draw(){background(data.background),translate(width/2,height/2),scale(1,-1),stroke(255),translate(0,-height/2),branches(height/2),data.mouse_controlled&&(data.left.angle=mouseX,data.right.angle=mouseY)}function branches(a){let b=a*data.mf;angleMode(DEGREES),push(),line(0,0,0,b),10<a&&(push(),translate(0,b),rotate(data.left.angle),branches(b*data.left.mf),pop(),push(),translate(0,b),rotate(-data.right.angle),branches(b*data.right.mf),pop()),pop()}createControlKit();