let data={sketch:{background:"#FFFFFF06"},circle:{r:0.1*window.innerWidth,spacing:1,toMorphto:3}},circlePath=[],trianglePath=[];function polarToCartesian(b,c){return createVector(b*cos(c),b*sin(c))}function setup(){let b=createCanvas(windowWidth,windowHeight);b.id("#canvas"),angleMode(DEGREES),colorMode(HSB,100),background(255),strokeWeight(1);let c=0,d=360/data.circle.toMorphto,e=polarToCartesian(data.circle.r,c),f=polarToCartesian(data.circle.r,d);for(var g=c;360>g;g+=data.circle.spacing){let h=data.circle.r*cos(g),j=data.circle.r*sin(g),k=new p5.Vector(h,j);circlePath.push(k);let l=g%(360/data.circle.toMorphto)/(d-c),m=p5.Vector.lerp(e,f,l);trianglePath.push(m),0==(g+data.circle.spacing)%(360/data.circle.toMorphto)&&(c+=360/data.circle.toMorphto,d+=360/data.circle.toMorphto,e=polarToCartesian(data.circle.r,c),f=polarToCartesian(data.circle.r,d))}}function draw(){background(data.sketch.background),translate(0.5*width,0.5*height),stroke(50+50*sin(frameCount),100,100,30),strokeWeight(1),stroke("#00000090"),noFill(),push(),translate(0.37*width,0),rotate(30+frameCount);let b=0.5*(2*sin(3*frameCount)+3);beginShape();for(var c=0;c<circlePath.length;c+=1){let d=circlePath[c],e=trianglePath[c],f=lerp(d.x,e.x,b),g=lerp(d.y,e.y,b);curveVertex(f,g),push(),strokeWeight(1),point(f,g),pop()}endShape(CLOSE),pop(),push(),translate(0.37*-width,0),rotate(30-frameCount),b=0.5*(2*sin(3*frameCount)+2),beginShape();for(var c=0;c<circlePath.length;c+=1){let d=circlePath[c],e=trianglePath[c],f=lerp(d.x,e.x,b),g=lerp(d.y,e.y,b);vertex(f,g),push(),strokeWeight(1),point(f,g),pop()}endShape(CLOSE),pop(),push(),translate(0.12*-width,0),rotate(30-frameCount),b=0.5*(sin(3*frameCount)+1),beginShape();for(var c=0;c<circlePath.length;c+=1){let d=circlePath[c],e=trianglePath[c],f=lerp(d.x,e.x,b),g=lerp(d.y,e.y,b);vertex(f,g),push(),strokeWeight(1),point(f,g),pop()}endShape(CLOSE),pop(),push(),translate(0.12*width,0),rotate(30-frameCount),b=0.5*(2*sin(3*frameCount)+1),beginShape();for(var c=0;c<circlePath.length;c+=1){let d=circlePath[c],e=trianglePath[c],f=lerp(d.x,e.x,b),g=lerp(d.y,e.y,b);vertex(f,g),push(),strokeWeight(1),point(f,g),pop()}endShape(CLOSE),pop()}