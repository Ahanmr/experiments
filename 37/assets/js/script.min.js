let data={sketch:{background:"#1e7575"},shape:{cx:0.6*window.innerWidth,cy:0.5*window.innerHeight,animate:{check:!0},n:10,r:200,rotation:30,fill:{check:!0,color:"#782711"},stroke:{check:!0,color:"#360d06",weight:16,cap:{options:["Default","Round","Square","Project"],selection:"Default"}},beginModes:{options:["Default","Points","Lines","Triangles","Triangle Strip","Triangle Fan","Quads","Quad Strip"],selection:"Default"},endModes:{options:["Closed","Open"],selection:"Closed"},vertices:{options:["Curved","Pointy"],selection:"Pointy"}}},controlkit;var createControlKit=()=>{controlkit=new ControlKit,controlkit.addPanel({align:"left",fixed:!0}).addSubGroup({label:"Sketch Settings"}).addColor(data.sketch,"background",{colorMode:"hex",label:"Background Color"}).addSubGroup({label:"Shape Configs"}).addNumberInput(data.shape,"cx",{label:"Origin X",step:1}).addNumberInput(data.shape,"cy",{label:"Origin Y",step:1}).addSelect(data.shape.beginModes,"options",{label:"Shape Modes",onChange:function(a){data.shape.beginModes.selection=data.shape.beginModes.options[a]}}).addSelect(data.shape.endModes,"options",{label:"End Cases",onChange:function(a){data.shape.endModes.selection=data.shape.endModes.options[a]}}).addSelect(data.shape.vertices,"options",{label:"Vertex Types",onChange:function(a){data.shape.vertices.selection=data.shape.vertices.options[a]}}).addSelect(data.shape.stroke.cap,"options",{label:"Cap Styles",onChange:function(a){data.shape.stroke.cap.selection=data.shape.stroke.cap.options[a]}}).addCheckbox(data.shape.animate,"check",{label:"Animate?"}).addCheckbox(data.shape.stroke,"check",{label:"Want an outline?"}).addColor(data.shape.stroke,"color",{colorMode:"hex",label:"Stroke Color"}).addNumberInput(data.shape.stroke,"weight",{label:"Stroke Weight",step:1}).addCheckbox(data.shape.fill,"check",{label:"Want to give it a color?"}).addColor(data.shape.fill,"color",{colorMode:"hex",label:"Fill Color"}).addNumberInput(data.shape,"n",{label:"Controlling Vertices (n)",step:1}).addNumberInput(data.shape,"r",{label:"Radius of Circumcircle",step:1}).addNumberInput(data.shape,"rotation",{label:"Rotation",step:1})};createControlKit();class Shape{constructor(a,b,c,d){this.cx=a,this.cy=b,this.r=c,this.rotation=0,this.n=d}show(){switch(push(),translate(this.cx,this.cy),rotate(this.rotation),data.shape.fill.check?fill(data.shape.fill.color):noFill(),data.shape.stroke.check?(stroke(data.shape.stroke.color),strokeWeight(data.shape.stroke.weight)):noStroke(),data.shape.stroke.cap.selection){case"Round":strokeCap(ROUND);break;case"Square":strokeCap(SQUARE);break;case"Project":strokeCap(PROJECT);break;default:}switch(data.shape.beginModes.selection){case"Points":beginShape(POINTS);break;case"Lines":beginShape(LINES);break;case"Triangles":beginShape(TRIANGLES);break;case"Triangle Strip":beginShape(TRIANGLE_STRIP);break;case"Triangle Fan":beginShape(TRIANGLE_FAN);break;case"Quads":beginShape(QUADS);break;case"Quad Strip":beginShape(QUAD_STRIP);break;default:beginShape();}if(angleMode(DEGREES),0<=this.n)for(var a=0;a<360;a+=360/this.n){let c=this.r*cos(a),d=this.r*sin(a);switch(data.shape.vertices.selection){case"Curved":curveVertex(c,d);break;default:vertex(c,d);}}switch(data.shape.endModes.selection){case"Closed":endShape(CLOSE);break;default:endShape();}pop()}update(){this.n=data.shape.n,this.r=data.shape.r,this.rotation=data.shape.rotation,this.cx=data.shape.cx,this.cy=data.shape.cy}animate(){this.n=data.shape.n*abs(sin(0.5*frameCount)),this.r=0.5*data.shape.r+data.shape.r*abs(sin(0.5*frameCount)),this.rotation=data.shape.rotation,this.cx=data.shape.cx,this.cy=data.shape.cy}}let s;function setup(){createCanvas(windowWidth,windowHeight),s=new Shape(0.5*width,0.5*height,100,3)}function draw(){background(data.sketch.background),data.shape.animate.check?s.animate():s.update(),s.show()}