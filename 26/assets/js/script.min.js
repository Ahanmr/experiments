let data={sketch:{background:"#000000"},circle:{noFill:!0,noStroke:!1,fill:"#000000",stroke:"#FFFFFF",strokeWeight:1},packing:{n:10}};class Circle{constructor(a,b,e=0){this.x=a,this.y=b,this.r=e/2,this.growing=!0}show(){data.circle.noFill?noFill():fill(data.circle.fill),data.circle.noStroke?noStroke():(stroke(data.circle.stroke),strokeWeight(data.circle.strokeWeight)),ellipse(this.x,this.y,2*this.r,2*this.r)}grow(){this.growing&&(this.r+=1)}edges(){return this.x+this.r>width||0>this.x-this.r||this.y+this.r>height||0>this.y-this.r}checkOverlap(a){this.overlapping=!1;let b=dist(this.x,this.y,a.x,a.y);return b<=this.r+a.r?(this.overlapping=!0,this.growing=!1,a.growing=!1,this.overlapping):this.overlapping}}let circles=[];function setup(){createCanvas(windowWidth,windowHeight);for(var a=0,b=data.packing.n;a<b;a+=1)circles.push(new Circle(random(0,width),random(0,height)))}function draw(){background(data.sketch.background);let a=newCircle();null!==a&&circles.push(a);for(var b=0,e=circles.length;b<e;b+=1)if(circles[b]){if(circles[b].growing)if(circles[b].edges())circles[b].growing=!1;else for(var f=0,g=circles.length;f<g;f+=1)if(circles[f]&&b!==f){circles[b].checkOverlap(circles[f])}circles[b].grow(),circles[b].show()}}function newCircle(){let a=random(width),b=random(height),e=!0;for(var f=0,g=circles.length;f<g;f+=1){let h=dist(a,b,circles[f].x,circles[f].y);if(h-2*data.circle.strokeWeight<circles[f].r){e=!1;break}}return e?new Circle(a,b):null}